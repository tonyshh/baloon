(async () => {
  const res = await fetch('data/pairs.json');
  const pairs = await res.json();
  let remaining = [...pairs];
  let hits = 0;
  const total = pairs.length;

  const container = document.getElementById('balloon-container');
  const targetEl = document.getElementById('target-word');
  document.getElementById('total').textContent = total;

  function showEndScreen() {
    console.log("üõë showEndScreen called, hits=", hits, "total=", total);
  // –ü—Ä—è—á–µ–º –≤—Å–µ –∏–≥—Ä–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
  document.getElementById('balloon-container').style.display = 'none';
  document.getElementById('target').style.display = 'none';
  document.getElementById('score').style.display = 'none';

  // –†–µ–Ω–¥–µ—Ä–∏–º –æ–≤–µ—Ä–ª–µ–π
  const game = document.getElementById('game');
  const end = document.createElement('div');
  end.id = 'end-screen';
  end.innerHTML = `
    <p>üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</p>
    <p>–¢—ã –ª–æ–ø–Ω—É–ª –≤—Å–µ ${total} —à–∞—Ä–∏–∫–æ–≤ –∑–∞ ${hits} —Ö–æ–¥${hits % 10 === 1 && hits !== 11 ? '' : '–æ–≤'}!</p>
    <button id="end-button">–ó–∞–∫—Ä—ã—Ç—å</button>
  `;
  game.appendChild(end);

  // –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
  document
    .getElementById('end-button')
    .addEventListener('click', () => Telegram.WebApp.close());
}


  let current = pickTarget();
  targetEl.textContent = current.translate;

  function renderBalloons() {
    container.innerHTML = '';
    remaining.forEach(pair => {
      const el = document.createElement('div');
      el.className = 'balloon';
      el.textContent = pair.word;
      el.style.left = Math.random() * 80 + '%';
      el.style.animationDuration = (5 + Math.random() * 5) + 's';

      el.addEventListener('click', () => {
        if (pair.translate === current.translate) {
          // –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —à–∞—Ä–∏–∫
          hits++;
          document.getElementById('hits').textContent = hits;

          // —É–¥–∞–ª—è–µ–º –∏–∑ remaining –∏ –∏–∑ DOM
          remaining = remaining.filter(p => p.translate !== pair.translate);
          el.remove();

          if (remaining.length === 0) {
            // –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞—Ä–∏–∫
            Telegram.WebApp.sendData(JSON.stringify({ hits, total }));
            showEndScreen();
          } else {
            // –Ω–æ–≤–∞—è —Ü–µ–ª—å
            current = pickTarget();
            targetEl.textContent = current.translate;
            renderBalloons();
          }
        } else {
          // –Ω–µ–≤–µ—Ä–Ω—ã–π ‚Äî –ø–æ–¥—Å–≤–µ—Ç–∫–∞
          el.style.background = '#e57373';
          setTimeout(() => el.style.background = '#ff8a65', 300);
        }
      });

      container.appendChild(el);
    });
  }

  // –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
  renderBalloons();
})();
